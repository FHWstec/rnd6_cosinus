// https://create.arduino.cc/editor/cosinus/d2db0870-a665-4a2a-84b6-7a58061122de/preview

/*
Dieses Programm soll über einen Taster einen Zufallsgenerator für 6 LED's auslösen, sodass diese darauffolgend die jeweilige Zahl
zwischen 1 und 6 darstellen. Eine siebte LED stellt den Status der Eingabe und des Zufallsgenerators dar.

Zum Schluss erfragt eine Schleife um herauszufinden, was gerade dargestellt oder verarbeitet wird.

Der Sketch verwendet 3582 Bytes (11%) des Programmspeicherplatzes. Das Maximum sind 32256 Bytes.
Globale Variablen verwenden 239 Bytes (11%) des dynamischen Speichers, 1809 Bytes für lokale Variablen verbleiben. Das Maximum sind 2048 Bytes.

*/
#include <SPI.h>

long randNumber;
byte rndmnmbr = random(randNumber);

// rndmbnmbr = random(randNumber, 1, 6)
byte in = 0;
double inByte = 0;
long outByte = (2, 3); // (0, 0), (0, 1);
//  int inByte = 0; 
//  int outByte = 1;
byte Ableseintervall;
byte Ai = 9600; //ms Ableseintervall
//      = 10000;

int Ablesefrequenz;
int /*const*/ Af = 9600; // in Baud; Vin

byte possible;
int Asoons(possible);
int Asap = 1000;

const int buttonPin = 2;
int buttonState = 0;

int analogeReferenz;
float Ar = 5.0;

int Status = 0;

int LEDpin_0 = 0;
int LEDpin_1 = 1;
int LEDpin_2 = 2;
int LEDpin_3 = 3;
int LEDpin_4 = 4;
int LEDpin_5 = 5;
int LEDpin_6 = 6;
// [1..6];
int /*array*/ Augenzahl = 1 or 2 or 3 or 4 or 5 or 6;

// do { int zufall = random(p) } while p != 8;

int const p = 8;  // 6 + 1 + 1
// for (p = 1, p++, p <= 6) 
// { for (p = 6, --p, p = 0) { int dice = random(Augenzahl); }; }
int /*const*/ ALLEpins = 1 and 2 and 3 and 4 and 5 and 6;
byte StatusPin;

 // int array Augenzahlen()[1, 2, 3, 4, 5, 6]
word test;


void setup() {
    Serial.available();
    Serial.begin(Ai);
    while (!Serial) {
      Serial.print("Serielle Verbindung wird hergestellt. Bitte warten . . .");
      delay(420);
      Serial.flush();
      Serial.begin(Af);
    }
    
    pinMode(StatusPin, OUTPUT);
    pinMode(buttonPin, INPUT);
   
    pinMode(LEDpin_0, OUTPUT);
      Serial.write(LEDpin_0);
      delay(1/p*1000);
      pinMode(StatusPin, OUTPUT);
      Serial.write(StatusPin);
      delay(1/p*1000);
    pinMode(LEDpin_1, OUTPUT); 
      Serial.write(LEDpin_1);
      delay(1/p*1000);
    pinMode(LEDpin_2, OUTPUT); 
      Serial.write(LEDpin_2);
      delay(1/p*1000);
    pinMode(LEDpin_3, OUTPUT);
    Serial.write(LEDpin_3);
      delay(1/p*1000);
    pinMode(LEDpin_4, OUTPUT);
    Serial.write(LEDpin_4);
      Serial.write(LEDpin_4);
      delay(1/p*1000);
      Serial.write(LEDpin_4);
    pinMode(LEDpin_5, OUTPUT);
      Serial.write(LEDpin_5);
      delay(1/p*1000);
    pinMode(LEDpin_6, OUTPUT);
      Serial.print(LEDpin_6);
      delay(1/p*1000);

      
  //    Serial.print(§"TesT : Licht : LED")
    Serial.println("LEDs initialisiert.");
    digitalWrite((LEDpin_1, LOW), (LEDpin_4, LOW)); 
    delay(420);
    digitalWrite((LEDpin_2, LOW), (LEDpin_5, LOW)); 
    delay(420);
    digitalWrite((LEDpin_3, LOW), (LEDpin_6, LOW));
    delay(420);
    
    Asap = (Asap*Ai)/Af;
}

void loop() {
  
  buttonState = digitalRead(buttonPin);
  if (buttonState == HIGH) {
  digitalWrite(StatusPin, HIGH);
  } else {
  digitalWrite(StatusPin, LOW);
  }
  
  
  delay(420);
  delay(420);
  analogWrite(StatusPin, HIGH);
  analogWrite(StatusPin, LED_BUILTIN);
  Serial.begin(Ai);
  Serial.available();
  Serial.write(LEDpin_0);
  Serial.write(Augenzahl);
  random(Augenzahl);
  digitalWrite((LEDpin_1, HIGH), (LEDpin_3, HIGH));
  digitalWrite(LEDpin_5, HIGH);
/* 
  switch(Augenzahl)
  { 
    case 0: digitalWrite(StatusPin, HIGH); delay(p/1000); 
    case 1: digitalWrite(LEDpin_1, HIGH); delay(p/1000); zeige1();
    case '2': digitalWrite(LEDpin_2, HIGH); delay(p/1000); zeige2();
    case '3': digitalWrite(LEDpin_3, HIGH); delay(p/1000); zeige3();
    case '4': digitalWrite(LEDpin_4, HIGH); delay(p/1000); zeige4();
    case '5': digitalWrite(LEDpin_5, HIGH); delay(p/1000); zeige5();
    case 6: digitalWrite(LEDpin_6, HIGH); delay(p/1000); zeige6();
    default: digitalWrite(ALLEpins, LOW); delay(Asap);
  }
*/
  if (Augenzahl = 1) {
    digitalWrite(LEDpin_1, HIGH);
    // loop.delay(Ai);
    Serial.print("Die Augenzahl ist 1."); 
  } else { digitalWrite(ALLEpins, LOW); delay(Asap); };
  while (ALLEpins && LEDpin_6) { ALLEpins, HIGH; delay(600); }
  
  Serial.write(StatusPin);
  Status = digitalRead(StatusPin);     // read the input pin
  analogWrite(StatusPin, Status / 4); 
  delay(p);
  Serial.write(Status);
/*
  int zeige1() {
  digitalWrite((LEDpin_1, HIGH);
  }
  int zeige2() {
  digitalWrite((LEDpin_1, HIGH), (LEDpin_2, HIGH)); 
  }
  int zeige 3() {
  digitalWrite((LEDpin_1, HIGH), (LEDpin_2, HIGH)); 
  digitalWrite((LEDpin_3, HIGH);
  }
  int zeige4() {
  digitalWrite((LEDpin_1, HIGH), (LEDpin_2, HIGH)); 
  digitalWrite((LEDpin_3, HIGH), (LEDpin_4, HIGH)); 
  }
  int zeige5() {
  digitalWrite((LEDpin_1, HIGH), (LEDpin_2, HIGH)); 
  digitalWrite((LEDpin_3, HIGH), (LEDpin_4, HIGH)); 
  digitalWrite(LEDpin_5, HIGH);
  }
  int zeige6() {
  digitalWrite((LEDpin_1, HIGH), (LEDpin_2, HIGH)); 
  digitalWrite((LEDpin_3, HIGH), (LEDpin_4, HIGH)); 
  digitalWrite((LEDpin_5, HIGH), (LEDpin_6, HIGH));
  }
  
*/  
}
  // double static newPassword;
  //newPassword = constrain(randNumber, sensorValue, 4);
  
  // delay(Ai);

 // Serial.println(Augenzahl);
  // byte neuerWürfel;
  //  neuerWürfel = constrain(randNumber, Augenzahlen, 6);
// void Würfeln();
